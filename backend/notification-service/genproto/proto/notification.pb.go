// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/notification.proto

package notificationpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_proto_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_notification_proto_rawDescGZIP(), []int{0}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"` // "new_follower", "like", "mention"
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	IsRead        bool                   `protobuf:"varint,5,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	EntityId      string                 `protobuf:"bytes,6,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"` // e.g., thread_id, follower_user_id
	ActorId       *uint32                `protobuf:"varint,7,opt,name=actor_id,json=actorId,proto3,oneof" json:"actor_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_proto_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_proto_notification_proto_rawDescGZIP(), []int{1}
}

func (x *Notification) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Notification) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Notification) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Notification) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Notification) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *Notification) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *Notification) GetActorId() uint32 {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return 0
}

func (x *Notification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	UnreadOnly    bool                   `protobuf:"varint,4,opt,name=unread_only,json=unreadOnly,proto3" json:"unread_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationsRequest) Reset() {
	*x = GetNotificationsRequest{}
	mi := &file_proto_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsRequest) ProtoMessage() {}

func (x *GetNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_notification_proto_rawDescGZIP(), []int{2}
}

func (x *GetNotificationsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetNotificationsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetNotificationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetNotificationsRequest) GetUnreadOnly() bool {
	if x != nil {
		return x.UnreadOnly
	}
	return false
}

type GetNotificationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*Notification        `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	HasMore       bool                   `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationsResponse) Reset() {
	*x = GetNotificationsResponse{}
	mi := &file_proto_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsResponse) ProtoMessage() {}

func (x *GetNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_notification_proto_rawDescGZIP(), []int{3}
}

func (x *GetNotificationsResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *GetNotificationsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type MarkNotificationAsReadRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId uint32                 `protobuf:"varint,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	UserId         uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkNotificationAsReadRequest) Reset() {
	*x = MarkNotificationAsReadRequest{}
	mi := &file_proto_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkNotificationAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationAsReadRequest) ProtoMessage() {}

func (x *MarkNotificationAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkNotificationAsReadRequest) Descriptor() ([]byte, []int) {
	return file_proto_notification_proto_rawDescGZIP(), []int{4}
}

func (x *MarkNotificationAsReadRequest) GetNotificationId() uint32 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

func (x *MarkNotificationAsReadRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type MarkAllNotificationsAsReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAllNotificationsAsReadRequest) Reset() {
	*x = MarkAllNotificationsAsReadRequest{}
	mi := &file_proto_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAllNotificationsAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllNotificationsAsReadRequest) ProtoMessage() {}

func (x *MarkAllNotificationsAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllNotificationsAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAllNotificationsAsReadRequest) Descriptor() ([]byte, []int) {
	return file_proto_notification_proto_rawDescGZIP(), []int{5}
}

func (x *MarkAllNotificationsAsReadRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUnreadNotificationCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnreadNotificationCountRequest) Reset() {
	*x = GetUnreadNotificationCountRequest{}
	mi := &file_proto_notification_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadNotificationCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadNotificationCountRequest) ProtoMessage() {}

func (x *GetUnreadNotificationCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadNotificationCountRequest.ProtoReflect.Descriptor instead.
func (*GetUnreadNotificationCountRequest) Descriptor() ([]byte, []int) {
	return file_proto_notification_proto_rawDescGZIP(), []int{6}
}

func (x *GetUnreadNotificationCountRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUnreadNotificationCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnreadNotificationCountResponse) Reset() {
	*x = GetUnreadNotificationCountResponse{}
	mi := &file_proto_notification_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadNotificationCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadNotificationCountResponse) ProtoMessage() {}

func (x *GetUnreadNotificationCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadNotificationCountResponse.ProtoReflect.Descriptor instead.
func (*GetUnreadNotificationCountResponse) Descriptor() ([]byte, []int) {
	return file_proto_notification_proto_rawDescGZIP(), []int{7}
}

func (x *GetUnreadNotificationCountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_proto_notification_proto protoreflect.FileDescriptor

const file_proto_notification_proto_rawDesc = "" +
	"\n" +
	"\x18proto/notification.proto\x12\fnotification\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"(\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"\x83\x02\n" +
	"\fNotification\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\rR\x06userId\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x17\n" +
	"\ais_read\x18\x05 \x01(\bR\x06isRead\x12\x1b\n" +
	"\tentity_id\x18\x06 \x01(\tR\bentityId\x12\x1e\n" +
	"\bactor_id\x18\a \x01(\rH\x00R\aactorId\x88\x01\x01\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAtB\v\n" +
	"\t_actor_id\"}\n" +
	"\x17GetNotificationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1f\n" +
	"\vunread_only\x18\x04 \x01(\bR\n" +
	"unreadOnly\"w\n" +
	"\x18GetNotificationsResponse\x12@\n" +
	"\rnotifications\x18\x01 \x03(\v2\x1a.notification.NotificationR\rnotifications\x12\x19\n" +
	"\bhas_more\x18\x02 \x01(\bR\ahasMore\"a\n" +
	"\x1dMarkNotificationAsReadRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\rR\x0enotificationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\rR\x06userId\"<\n" +
	"!MarkAllNotificationsAsReadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\"<\n" +
	"!GetUnreadNotificationCountRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\":\n" +
	"\"GetUnreadNotificationCountResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count2\x84\x04\n" +
	"\x13NotificationService\x12C\n" +
	"\vHealthCheck\x12\x16.google.protobuf.Empty\x1a\x1c.notification.HealthResponse\x12a\n" +
	"\x10GetNotifications\x12%.notification.GetNotificationsRequest\x1a&.notification.GetNotificationsResponse\x12]\n" +
	"\x16MarkNotificationAsRead\x12+.notification.MarkNotificationAsReadRequest\x1a\x16.google.protobuf.Empty\x12e\n" +
	"\x1aMarkAllNotificationsAsRead\x12/.notification.MarkAllNotificationsAsReadRequest\x1a\x16.google.protobuf.Empty\x12\x7f\n" +
	"\x1aGetUnreadNotificationCount\x12/.notification.GetUnreadNotificationCountRequest\x1a0.notification.GetUnreadNotificationCountResponseBeZcgithub.com/Acad600-TPA/WEB-MJ-242/backend/notification-service/genproto/notification;notificationpbb\x06proto3"

var (
	file_proto_notification_proto_rawDescOnce sync.Once
	file_proto_notification_proto_rawDescData []byte
)

func file_proto_notification_proto_rawDescGZIP() []byte {
	file_proto_notification_proto_rawDescOnce.Do(func() {
		file_proto_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_notification_proto_rawDesc), len(file_proto_notification_proto_rawDesc)))
	})
	return file_proto_notification_proto_rawDescData
}

var file_proto_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_notification_proto_goTypes = []any{
	(*HealthResponse)(nil),                     // 0: notification.HealthResponse
	(*Notification)(nil),                       // 1: notification.Notification
	(*GetNotificationsRequest)(nil),            // 2: notification.GetNotificationsRequest
	(*GetNotificationsResponse)(nil),           // 3: notification.GetNotificationsResponse
	(*MarkNotificationAsReadRequest)(nil),      // 4: notification.MarkNotificationAsReadRequest
	(*MarkAllNotificationsAsReadRequest)(nil),  // 5: notification.MarkAllNotificationsAsReadRequest
	(*GetUnreadNotificationCountRequest)(nil),  // 6: notification.GetUnreadNotificationCountRequest
	(*GetUnreadNotificationCountResponse)(nil), // 7: notification.GetUnreadNotificationCountResponse
	(*timestamppb.Timestamp)(nil),              // 8: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                      // 9: google.protobuf.Empty
}
var file_proto_notification_proto_depIdxs = []int32{
	8, // 0: notification.Notification.created_at:type_name -> google.protobuf.Timestamp
	1, // 1: notification.GetNotificationsResponse.notifications:type_name -> notification.Notification
	9, // 2: notification.NotificationService.HealthCheck:input_type -> google.protobuf.Empty
	2, // 3: notification.NotificationService.GetNotifications:input_type -> notification.GetNotificationsRequest
	4, // 4: notification.NotificationService.MarkNotificationAsRead:input_type -> notification.MarkNotificationAsReadRequest
	5, // 5: notification.NotificationService.MarkAllNotificationsAsRead:input_type -> notification.MarkAllNotificationsAsReadRequest
	6, // 6: notification.NotificationService.GetUnreadNotificationCount:input_type -> notification.GetUnreadNotificationCountRequest
	0, // 7: notification.NotificationService.HealthCheck:output_type -> notification.HealthResponse
	3, // 8: notification.NotificationService.GetNotifications:output_type -> notification.GetNotificationsResponse
	9, // 9: notification.NotificationService.MarkNotificationAsRead:output_type -> google.protobuf.Empty
	9, // 10: notification.NotificationService.MarkAllNotificationsAsRead:output_type -> google.protobuf.Empty
	7, // 11: notification.NotificationService.GetUnreadNotificationCount:output_type -> notification.GetUnreadNotificationCountResponse
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_notification_proto_init() }
func file_proto_notification_proto_init() {
	if File_proto_notification_proto != nil {
		return
	}
	file_proto_notification_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_notification_proto_rawDesc), len(file_proto_notification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_notification_proto_goTypes,
		DependencyIndexes: file_proto_notification_proto_depIdxs,
		MessageInfos:      file_proto_notification_proto_msgTypes,
	}.Build()
	File_proto_notification_proto = out.File
	file_proto_notification_proto_goTypes = nil
	file_proto_notification_proto_depIdxs = nil
}
