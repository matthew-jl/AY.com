// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/thread.proto

package genproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplyRestriction int32

const (
	ReplyRestriction_REPLY_RESTRICTION_UNSPECIFIED ReplyRestriction = 0
	ReplyRestriction_EVERYONE                      ReplyRestriction = 1
	ReplyRestriction_FOLLOWING                     ReplyRestriction = 2
	ReplyRestriction_VERIFIED                      ReplyRestriction = 3
)

// Enum value maps for ReplyRestriction.
var (
	ReplyRestriction_name = map[int32]string{
		0: "REPLY_RESTRICTION_UNSPECIFIED",
		1: "EVERYONE",
		2: "FOLLOWING",
		3: "VERIFIED",
	}
	ReplyRestriction_value = map[string]int32{
		"REPLY_RESTRICTION_UNSPECIFIED": 0,
		"EVERYONE":                      1,
		"FOLLOWING":                     2,
		"VERIFIED":                      3,
	}
)

func (x ReplyRestriction) Enum() *ReplyRestriction {
	p := new(ReplyRestriction)
	*p = x
	return p
}

func (x ReplyRestriction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplyRestriction) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_thread_proto_enumTypes[0].Descriptor()
}

func (ReplyRestriction) Type() protoreflect.EnumType {
	return &file_proto_thread_proto_enumTypes[0]
}

func (x ReplyRestriction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplyRestriction.Descriptor instead.
func (ReplyRestriction) EnumDescriptor() ([]byte, []int) {
	return file_proto_thread_proto_rawDescGZIP(), []int{0}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_proto_thread_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_thread_proto_rawDescGZIP(), []int{0}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Thread struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Id                        uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId                    uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content                   string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	ParentThreadId            *uint32                `protobuf:"varint,4,opt,name=parent_thread_id,json=parentThreadId,proto3,oneof" json:"parent_thread_id,omitempty"`
	ReplyRestriction          ReplyRestriction       `protobuf:"varint,5,opt,name=reply_restriction,json=replyRestriction,proto3,enum=thread.ReplyRestriction" json:"reply_restriction,omitempty"`
	ScheduledAt               *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
	PostedAt                  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=posted_at,json=postedAt,proto3" json:"posted_at,omitempty"`
	CommunityId               *uint32                `protobuf:"varint,8,opt,name=community_id,json=communityId,proto3,oneof" json:"community_id,omitempty"`
	IsAdvertisement           bool                   `protobuf:"varint,9,opt,name=is_advertisement,json=isAdvertisement,proto3" json:"is_advertisement,omitempty"`
	MediaIds                  []uint32               `protobuf:"varint,10,rep,packed,name=media_ids,json=mediaIds,proto3" json:"media_ids,omitempty"`
	CreatedAt                 *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LikeCount                 int32                  `protobuf:"varint,12,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	ReplyCount                int32                  `protobuf:"varint,13,opt,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"`
	RepostCount               int32                  `protobuf:"varint,14,opt,name=repost_count,json=repostCount,proto3" json:"repost_count,omitempty"`
	BookmarkCount             int32                  `protobuf:"varint,15,opt,name=bookmark_count,json=bookmarkCount,proto3" json:"bookmark_count,omitempty"`
	IsLikedByCurrentUser      bool                   `protobuf:"varint,16,opt,name=is_liked_by_current_user,json=isLikedByCurrentUser,proto3" json:"is_liked_by_current_user,omitempty"`
	IsBookmarkedByCurrentUser bool                   `protobuf:"varint,17,opt,name=is_bookmarked_by_current_user,json=isBookmarkedByCurrentUser,proto3" json:"is_bookmarked_by_current_user,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Thread) Reset() {
	*x = Thread{}
	mi := &file_proto_thread_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Thread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thread) ProtoMessage() {}

func (x *Thread) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thread.ProtoReflect.Descriptor instead.
func (*Thread) Descriptor() ([]byte, []int) {
	return file_proto_thread_proto_rawDescGZIP(), []int{1}
}

func (x *Thread) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Thread) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Thread) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Thread) GetParentThreadId() uint32 {
	if x != nil && x.ParentThreadId != nil {
		return *x.ParentThreadId
	}
	return 0
}

func (x *Thread) GetReplyRestriction() ReplyRestriction {
	if x != nil {
		return x.ReplyRestriction
	}
	return ReplyRestriction_REPLY_RESTRICTION_UNSPECIFIED
}

func (x *Thread) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *Thread) GetPostedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PostedAt
	}
	return nil
}

func (x *Thread) GetCommunityId() uint32 {
	if x != nil && x.CommunityId != nil {
		return *x.CommunityId
	}
	return 0
}

func (x *Thread) GetIsAdvertisement() bool {
	if x != nil {
		return x.IsAdvertisement
	}
	return false
}

func (x *Thread) GetMediaIds() []uint32 {
	if x != nil {
		return x.MediaIds
	}
	return nil
}

func (x *Thread) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Thread) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *Thread) GetReplyCount() int32 {
	if x != nil {
		return x.ReplyCount
	}
	return 0
}

func (x *Thread) GetRepostCount() int32 {
	if x != nil {
		return x.RepostCount
	}
	return 0
}

func (x *Thread) GetBookmarkCount() int32 {
	if x != nil {
		return x.BookmarkCount
	}
	return 0
}

func (x *Thread) GetIsLikedByCurrentUser() bool {
	if x != nil {
		return x.IsLikedByCurrentUser
	}
	return false
}

func (x *Thread) GetIsBookmarkedByCurrentUser() bool {
	if x != nil {
		return x.IsBookmarkedByCurrentUser
	}
	return false
}

type CreateThreadRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	UserId           uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Provided by gateway (from JWT)
	Content          string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	ParentThreadId   *uint32                `protobuf:"varint,3,opt,name=parent_thread_id,json=parentThreadId,proto3,oneof" json:"parent_thread_id,omitempty"`
	ReplyRestriction ReplyRestriction       `protobuf:"varint,4,opt,name=reply_restriction,json=replyRestriction,proto3,enum=thread.ReplyRestriction" json:"reply_restriction,omitempty"`
	ScheduledAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
	CommunityId      *uint32                `protobuf:"varint,6,opt,name=community_id,json=communityId,proto3,oneof" json:"community_id,omitempty"`
	MediaIds         []uint32               `protobuf:"varint,7,rep,packed,name=media_ids,json=mediaIds,proto3" json:"media_ids,omitempty"` // IDs obtained from Media service uploads
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateThreadRequest) Reset() {
	*x = CreateThreadRequest{}
	mi := &file_proto_thread_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateThreadRequest) ProtoMessage() {}

func (x *CreateThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateThreadRequest.ProtoReflect.Descriptor instead.
func (*CreateThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_proto_rawDescGZIP(), []int{2}
}

func (x *CreateThreadRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateThreadRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateThreadRequest) GetParentThreadId() uint32 {
	if x != nil && x.ParentThreadId != nil {
		return *x.ParentThreadId
	}
	return 0
}

func (x *CreateThreadRequest) GetReplyRestriction() ReplyRestriction {
	if x != nil {
		return x.ReplyRestriction
	}
	return ReplyRestriction_REPLY_RESTRICTION_UNSPECIFIED
}

func (x *CreateThreadRequest) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *CreateThreadRequest) GetCommunityId() uint32 {
	if x != nil && x.CommunityId != nil {
		return *x.CommunityId
	}
	return 0
}

func (x *CreateThreadRequest) GetMediaIds() []uint32 {
	if x != nil {
		return x.MediaIds
	}
	return nil
}

type GetThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      uint32                 `protobuf:"varint,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	CurrentUserId *uint32                `protobuf:"varint,2,opt,name=current_user_id,json=currentUserId,proto3,oneof" json:"current_user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThreadRequest) Reset() {
	*x = GetThreadRequest{}
	mi := &file_proto_thread_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThreadRequest) ProtoMessage() {}

func (x *GetThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThreadRequest.ProtoReflect.Descriptor instead.
func (*GetThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_proto_rawDescGZIP(), []int{3}
}

func (x *GetThreadRequest) GetThreadId() uint32 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

func (x *GetThreadRequest) GetCurrentUserId() uint32 {
	if x != nil && x.CurrentUserId != nil {
		return *x.CurrentUserId
	}
	return 0
}

type DeleteThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      uint32                 `protobuf:"varint,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteThreadRequest) Reset() {
	*x = DeleteThreadRequest{}
	mi := &file_proto_thread_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteThreadRequest) ProtoMessage() {}

func (x *DeleteThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteThreadRequest.ProtoReflect.Descriptor instead.
func (*DeleteThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteThreadRequest) GetThreadId() uint32 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

func (x *DeleteThreadRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type InteractThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      uint32                 `protobuf:"varint,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InteractThreadRequest) Reset() {
	*x = InteractThreadRequest{}
	mi := &file_proto_thread_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractThreadRequest) ProtoMessage() {}

func (x *InteractThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractThreadRequest.ProtoReflect.Descriptor instead.
func (*InteractThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_proto_rawDescGZIP(), []int{5}
}

func (x *InteractThreadRequest) GetThreadId() uint32 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

func (x *InteractThreadRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetFeedThreadsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentUserId *uint32                `protobuf:"varint,1,opt,name=current_user_id,json=currentUserId,proto3,oneof" json:"current_user_id,omitempty"` // ID of the user requesting the feed (for "Following" later)
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	FeedType      string                 `protobuf:"bytes,4,opt,name=feed_type,json=feedType,proto3" json:"feed_type,omitempty"` // "foryou", "following" (optional for now)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeedThreadsRequest) Reset() {
	*x = GetFeedThreadsRequest{}
	mi := &file_proto_thread_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedThreadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedThreadsRequest) ProtoMessage() {}

func (x *GetFeedThreadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedThreadsRequest.ProtoReflect.Descriptor instead.
func (*GetFeedThreadsRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_proto_rawDescGZIP(), []int{6}
}

func (x *GetFeedThreadsRequest) GetCurrentUserId() uint32 {
	if x != nil && x.CurrentUserId != nil {
		return *x.CurrentUserId
	}
	return 0
}

func (x *GetFeedThreadsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetFeedThreadsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetFeedThreadsRequest) GetFeedType() string {
	if x != nil {
		return x.FeedType
	}
	return ""
}

type GetFeedThreadsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Threads       []*Thread              `protobuf:"bytes,1,rep,name=threads,proto3" json:"threads,omitempty"`
	HasMore       bool                   `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeedThreadsResponse) Reset() {
	*x = GetFeedThreadsResponse{}
	mi := &file_proto_thread_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedThreadsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedThreadsResponse) ProtoMessage() {}

func (x *GetFeedThreadsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedThreadsResponse.ProtoReflect.Descriptor instead.
func (*GetFeedThreadsResponse) Descriptor() ([]byte, []int) {
	return file_proto_thread_proto_rawDescGZIP(), []int{7}
}

func (x *GetFeedThreadsResponse) GetThreads() []*Thread {
	if x != nil {
		return x.Threads
	}
	return nil
}

func (x *GetFeedThreadsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

var File_proto_thread_proto protoreflect.FileDescriptor

const file_proto_thread_proto_rawDesc = "" +
	"\n" +
	"\x12proto/thread.proto\x12\x06thread\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"(\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"\x8e\x06\n" +
	"\x06Thread\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\rR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12-\n" +
	"\x10parent_thread_id\x18\x04 \x01(\rH\x00R\x0eparentThreadId\x88\x01\x01\x12E\n" +
	"\x11reply_restriction\x18\x05 \x01(\x0e2\x18.thread.ReplyRestrictionR\x10replyRestriction\x12=\n" +
	"\fscheduled_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\x127\n" +
	"\tposted_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\bpostedAt\x12&\n" +
	"\fcommunity_id\x18\b \x01(\rH\x01R\vcommunityId\x88\x01\x01\x12)\n" +
	"\x10is_advertisement\x18\t \x01(\bR\x0fisAdvertisement\x12\x1b\n" +
	"\tmedia_ids\x18\n" +
	" \x03(\rR\bmediaIds\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"like_count\x18\f \x01(\x05R\tlikeCount\x12\x1f\n" +
	"\vreply_count\x18\r \x01(\x05R\n" +
	"replyCount\x12!\n" +
	"\frepost_count\x18\x0e \x01(\x05R\vrepostCount\x12%\n" +
	"\x0ebookmark_count\x18\x0f \x01(\x05R\rbookmarkCount\x126\n" +
	"\x18is_liked_by_current_user\x18\x10 \x01(\bR\x14isLikedByCurrentUser\x12@\n" +
	"\x1dis_bookmarked_by_current_user\x18\x11 \x01(\bR\x19isBookmarkedByCurrentUserB\x13\n" +
	"\x11_parent_thread_idB\x0f\n" +
	"\r_community_id\"\xe8\x02\n" +
	"\x13CreateThreadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12-\n" +
	"\x10parent_thread_id\x18\x03 \x01(\rH\x00R\x0eparentThreadId\x88\x01\x01\x12E\n" +
	"\x11reply_restriction\x18\x04 \x01(\x0e2\x18.thread.ReplyRestrictionR\x10replyRestriction\x12=\n" +
	"\fscheduled_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vscheduledAt\x12&\n" +
	"\fcommunity_id\x18\x06 \x01(\rH\x01R\vcommunityId\x88\x01\x01\x12\x1b\n" +
	"\tmedia_ids\x18\a \x03(\rR\bmediaIdsB\x13\n" +
	"\x11_parent_thread_idB\x0f\n" +
	"\r_community_id\"p\n" +
	"\x10GetThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\rR\bthreadId\x12+\n" +
	"\x0fcurrent_user_id\x18\x02 \x01(\rH\x00R\rcurrentUserId\x88\x01\x01B\x12\n" +
	"\x10_current_user_id\"K\n" +
	"\x13DeleteThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\rR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\rR\x06userId\"M\n" +
	"\x15InteractThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\rR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\rR\x06userId\"\x9f\x01\n" +
	"\x15GetFeedThreadsRequest\x12+\n" +
	"\x0fcurrent_user_id\x18\x01 \x01(\rH\x00R\rcurrentUserId\x88\x01\x01\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1b\n" +
	"\tfeed_type\x18\x04 \x01(\tR\bfeedTypeB\x12\n" +
	"\x10_current_user_id\"]\n" +
	"\x16GetFeedThreadsResponse\x12(\n" +
	"\athreads\x18\x01 \x03(\v2\x0e.thread.ThreadR\athreads\x12\x19\n" +
	"\bhas_more\x18\x02 \x01(\bR\ahasMore*`\n" +
	"\x10ReplyRestriction\x12!\n" +
	"\x1dREPLY_RESTRICTION_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bEVERYONE\x10\x01\x12\r\n" +
	"\tFOLLOWING\x10\x02\x12\f\n" +
	"\bVERIFIED\x10\x032\xf8\x04\n" +
	"\rThreadService\x12=\n" +
	"\vHealthCheck\x12\x16.google.protobuf.Empty\x1a\x16.thread.HealthResponse\x12;\n" +
	"\fCreateThread\x12\x1b.thread.CreateThreadRequest\x1a\x0e.thread.Thread\x125\n" +
	"\tGetThread\x12\x18.thread.GetThreadRequest\x1a\x0e.thread.Thread\x12C\n" +
	"\fDeleteThread\x12\x1b.thread.DeleteThreadRequest\x1a\x16.google.protobuf.Empty\x12C\n" +
	"\n" +
	"LikeThread\x12\x1d.thread.InteractThreadRequest\x1a\x16.google.protobuf.Empty\x12E\n" +
	"\fUnlikeThread\x12\x1d.thread.InteractThreadRequest\x1a\x16.google.protobuf.Empty\x12G\n" +
	"\x0eBookmarkThread\x12\x1d.thread.InteractThreadRequest\x1a\x16.google.protobuf.Empty\x12I\n" +
	"\x10UnbookmarkThread\x12\x1d.thread.InteractThreadRequest\x1a\x16.google.protobuf.Empty\x12O\n" +
	"\x0eGetFeedThreads\x12\x1d.thread.GetFeedThreadsRequest\x1a\x1e.thread.GetFeedThreadsResponseBCZAgithub.com/Acad600-TPA/WEB-MJ-242/backend/thread-service/genprotob\x06proto3"

var (
	file_proto_thread_proto_rawDescOnce sync.Once
	file_proto_thread_proto_rawDescData []byte
)

func file_proto_thread_proto_rawDescGZIP() []byte {
	file_proto_thread_proto_rawDescOnce.Do(func() {
		file_proto_thread_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_thread_proto_rawDesc), len(file_proto_thread_proto_rawDesc)))
	})
	return file_proto_thread_proto_rawDescData
}

var file_proto_thread_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_thread_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_thread_proto_goTypes = []any{
	(ReplyRestriction)(0),          // 0: thread.ReplyRestriction
	(*HealthResponse)(nil),         // 1: thread.HealthResponse
	(*Thread)(nil),                 // 2: thread.Thread
	(*CreateThreadRequest)(nil),    // 3: thread.CreateThreadRequest
	(*GetThreadRequest)(nil),       // 4: thread.GetThreadRequest
	(*DeleteThreadRequest)(nil),    // 5: thread.DeleteThreadRequest
	(*InteractThreadRequest)(nil),  // 6: thread.InteractThreadRequest
	(*GetFeedThreadsRequest)(nil),  // 7: thread.GetFeedThreadsRequest
	(*GetFeedThreadsResponse)(nil), // 8: thread.GetFeedThreadsResponse
	(*timestamppb.Timestamp)(nil),  // 9: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),          // 10: google.protobuf.Empty
}
var file_proto_thread_proto_depIdxs = []int32{
	0,  // 0: thread.Thread.reply_restriction:type_name -> thread.ReplyRestriction
	9,  // 1: thread.Thread.scheduled_at:type_name -> google.protobuf.Timestamp
	9,  // 2: thread.Thread.posted_at:type_name -> google.protobuf.Timestamp
	9,  // 3: thread.Thread.created_at:type_name -> google.protobuf.Timestamp
	0,  // 4: thread.CreateThreadRequest.reply_restriction:type_name -> thread.ReplyRestriction
	9,  // 5: thread.CreateThreadRequest.scheduled_at:type_name -> google.protobuf.Timestamp
	2,  // 6: thread.GetFeedThreadsResponse.threads:type_name -> thread.Thread
	10, // 7: thread.ThreadService.HealthCheck:input_type -> google.protobuf.Empty
	3,  // 8: thread.ThreadService.CreateThread:input_type -> thread.CreateThreadRequest
	4,  // 9: thread.ThreadService.GetThread:input_type -> thread.GetThreadRequest
	5,  // 10: thread.ThreadService.DeleteThread:input_type -> thread.DeleteThreadRequest
	6,  // 11: thread.ThreadService.LikeThread:input_type -> thread.InteractThreadRequest
	6,  // 12: thread.ThreadService.UnlikeThread:input_type -> thread.InteractThreadRequest
	6,  // 13: thread.ThreadService.BookmarkThread:input_type -> thread.InteractThreadRequest
	6,  // 14: thread.ThreadService.UnbookmarkThread:input_type -> thread.InteractThreadRequest
	7,  // 15: thread.ThreadService.GetFeedThreads:input_type -> thread.GetFeedThreadsRequest
	1,  // 16: thread.ThreadService.HealthCheck:output_type -> thread.HealthResponse
	2,  // 17: thread.ThreadService.CreateThread:output_type -> thread.Thread
	2,  // 18: thread.ThreadService.GetThread:output_type -> thread.Thread
	10, // 19: thread.ThreadService.DeleteThread:output_type -> google.protobuf.Empty
	10, // 20: thread.ThreadService.LikeThread:output_type -> google.protobuf.Empty
	10, // 21: thread.ThreadService.UnlikeThread:output_type -> google.protobuf.Empty
	10, // 22: thread.ThreadService.BookmarkThread:output_type -> google.protobuf.Empty
	10, // 23: thread.ThreadService.UnbookmarkThread:output_type -> google.protobuf.Empty
	8,  // 24: thread.ThreadService.GetFeedThreads:output_type -> thread.GetFeedThreadsResponse
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_thread_proto_init() }
func file_proto_thread_proto_init() {
	if File_proto_thread_proto != nil {
		return
	}
	file_proto_thread_proto_msgTypes[1].OneofWrappers = []any{}
	file_proto_thread_proto_msgTypes[2].OneofWrappers = []any{}
	file_proto_thread_proto_msgTypes[3].OneofWrappers = []any{}
	file_proto_thread_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_thread_proto_rawDesc), len(file_proto_thread_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_thread_proto_goTypes,
		DependencyIndexes: file_proto_thread_proto_depIdxs,
		EnumInfos:         file_proto_thread_proto_enumTypes,
		MessageInfos:      file_proto_thread_proto_msgTypes,
	}.Build()
	File_proto_thread_proto = out.File
	file_proto_thread_proto_goTypes = nil
	file_proto_thread_proto_depIdxs = nil
}
