syntax = "proto3";

package thread;

option go_package = "github.com/Acad600-TPA/WEB-MJ-242/backend/thread-service/genproto";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service ThreadService {
  rpc HealthCheck(google.protobuf.Empty) returns (HealthResponse);
  rpc CreateThread(CreateThreadRequest) returns (Thread);
  rpc GetThread(GetThreadRequest) returns (Thread);
  rpc DeleteThread(DeleteThreadRequest) returns (google.protobuf.Empty);
  rpc LikeThread(InteractThreadRequest) returns (google.protobuf.Empty);
  rpc UnlikeThread(InteractThreadRequest) returns (google.protobuf.Empty);
  rpc BookmarkThread(InteractThreadRequest) returns (google.protobuf.Empty);
  rpc UnbookmarkThread(InteractThreadRequest) returns (google.protobuf.Empty);
  rpc GetFeedThreads(GetFeedThreadsRequest) returns (GetFeedThreadsResponse);
  rpc GetUserThreads(GetUserThreadsRequest) returns (GetUserThreadsResponse);
  rpc GetBookmarkedThreads(GetBookmarkedThreadsRequest) returns (GetBookmarkedThreadsResponse); 
  // Add Repost later if needed (might be slightly different)
}

message HealthResponse { string status = 1; }

enum ReplyRestriction {
  REPLY_RESTRICTION_UNSPECIFIED = 0;
  EVERYONE = 1;
  FOLLOWING = 2;
  VERIFIED = 3;
}

message Thread {
  uint32 id = 1;
  uint32 user_id = 2;
  string content = 3;
  optional uint32 parent_thread_id = 4;
  ReplyRestriction reply_restriction = 5;
  google.protobuf.Timestamp scheduled_at = 6;
  google.protobuf.Timestamp posted_at = 7;   
  optional uint32 community_id = 8;
  bool is_advertisement = 9;
  repeated uint32 media_ids = 10;
  google.protobuf.Timestamp created_at = 11;
  int32 like_count = 12;
  int32 reply_count = 13;
  int32 repost_count = 14;
  int32 bookmark_count = 15; 
  bool is_liked_by_current_user = 16;
  bool is_bookmarked_by_current_user = 17;
  // bool is_reposted_by_current_user = 18; // Add later
  // Add user info (name, handle, pic) from User service during aggregation later
}

message CreateThreadRequest {
  uint32 user_id = 1;
  string content = 2;
  optional uint32 parent_thread_id = 3;
  ReplyRestriction reply_restriction = 4;
  google.protobuf.Timestamp scheduled_at = 5;
  optional uint32 community_id = 6;
  repeated uint32 media_ids = 7;
  // is_advertisement
}

message GetThreadRequest {
  uint32 thread_id = 1;
  optional uint32 current_user_id = 2;
}

message DeleteThreadRequest {
  uint32 thread_id = 1;
  uint32 user_id = 2;
}

message InteractThreadRequest {
  uint32 thread_id = 1;
  uint32 user_id = 2;
}

message GetFeedThreadsRequest {
  optional uint32 current_user_id = 1;
  int32 page = 2;
  int32 limit = 3;
  string feed_type = 4; // "foryou", "following"
  repeated uint32 exclude_user_ids = 5; // for blocked or blocking
  repeated uint32 include_only_user_ids = 6;  // for "following"
}

message GetFeedThreadsResponse {
  repeated Thread threads = 1;
  bool has_more = 2;
}

message GetUserThreadsRequest {
  uint32 target_user_id = 1;
  optional uint32 requester_user_id = 2;
  string thread_type = 3; // "posts", "replies", "likes", "media"
  int32 page = 4;
  int32 limit = 5;
  repeated uint32 exclude_user_ids = 6;
}

message GetUserThreadsResponse {
  repeated Thread threads = 1;
  bool has_more = 2;
}

message GetBookmarkedThreadsRequest {
  uint32 user_id = 1;
  optional uint32 requester_user_id = 2;
  int32 page = 3;
  int32 limit = 4;
}

message GetBookmarkedThreadsResponse {
  repeated Thread threads = 1;
  bool has_more = 2;
}