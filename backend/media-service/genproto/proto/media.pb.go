// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/media.proto

package genproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_proto_media_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_proto_rawDescGZIP(), []int{0}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Media struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UploaderUserId uint32                 `protobuf:"varint,2,opt,name=uploader_user_id,json=uploaderUserId,proto3" json:"uploader_user_id,omitempty"`
	SupabasePath   string                 `protobuf:"bytes,3,opt,name=supabase_path,json=supabasePath,proto3" json:"supabase_path,omitempty"` // Path within bucket
	BucketName     string                 `protobuf:"bytes,4,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	MimeType       string                 `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	FileSize       int64                  `protobuf:"varint,6,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	PublicUrl      string                 `protobuf:"bytes,7,opt,name=public_url,json=publicUrl,proto3" json:"public_url,omitempty"` // Add dynamically generated public URL
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Media) Reset() {
	*x = Media{}
	mi := &file_proto_media_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_proto_media_proto_rawDescGZIP(), []int{1}
}

func (x *Media) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Media) GetUploaderUserId() uint32 {
	if x != nil {
		return x.UploaderUserId
	}
	return 0
}

func (x *Media) GetSupabasePath() string {
	if x != nil {
		return x.SupabasePath
	}
	return ""
}

func (x *Media) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *Media) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Media) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Media) GetPublicUrl() string {
	if x != nil {
		return x.PublicUrl
	}
	return ""
}

func (x *Media) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type UploadMediaRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UploaderUserId uint32                 `protobuf:"varint,1,opt,name=uploader_user_id,json=uploaderUserId,proto3" json:"uploader_user_id,omitempty"`
	FileName       string                 `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"` // Original filename for context/extension
	MimeType       string                 `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	FileContent    []byte                 `protobuf:"bytes,4,opt,name=file_content,json=fileContent,proto3" json:"file_content,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UploadMediaRequest) Reset() {
	*x = UploadMediaRequest{}
	mi := &file_proto_media_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMediaRequest) ProtoMessage() {}

func (x *UploadMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMediaRequest.ProtoReflect.Descriptor instead.
func (*UploadMediaRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_proto_rawDescGZIP(), []int{2}
}

func (x *UploadMediaRequest) GetUploaderUserId() uint32 {
	if x != nil {
		return x.UploaderUserId
	}
	return 0
}

func (x *UploadMediaRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadMediaRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *UploadMediaRequest) GetFileContent() []byte {
	if x != nil {
		return x.FileContent
	}
	return nil
}

type UploadMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         *Media                 `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"` // Return full media info including ID and URL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadMediaResponse) Reset() {
	*x = UploadMediaResponse{}
	mi := &file_proto_media_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMediaResponse) ProtoMessage() {}

func (x *UploadMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMediaResponse.ProtoReflect.Descriptor instead.
func (*UploadMediaResponse) Descriptor() ([]byte, []int) {
	return file_proto_media_proto_rawDescGZIP(), []int{3}
}

func (x *UploadMediaResponse) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type GetMediaMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       uint32                 `protobuf:"varint,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaMetadataRequest) Reset() {
	*x = GetMediaMetadataRequest{}
	mi := &file_proto_media_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaMetadataRequest) ProtoMessage() {}

func (x *GetMediaMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_media_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetMediaMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_media_proto_rawDescGZIP(), []int{4}
}

func (x *GetMediaMetadataRequest) GetMediaId() uint32 {
	if x != nil {
		return x.MediaId
	}
	return 0
}

var File_proto_media_proto protoreflect.FileDescriptor

const file_proto_media_proto_rawDesc = "" +
	"\n" +
	"\x11proto/media.proto\x12\x05media\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"(\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"\x9b\x02\n" +
	"\x05Media\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12(\n" +
	"\x10uploader_user_id\x18\x02 \x01(\rR\x0euploaderUserId\x12#\n" +
	"\rsupabase_path\x18\x03 \x01(\tR\fsupabasePath\x12\x1f\n" +
	"\vbucket_name\x18\x04 \x01(\tR\n" +
	"bucketName\x12\x1b\n" +
	"\tmime_type\x18\x05 \x01(\tR\bmimeType\x12\x1b\n" +
	"\tfile_size\x18\x06 \x01(\x03R\bfileSize\x12\x1d\n" +
	"\n" +
	"public_url\x18\a \x01(\tR\tpublicUrl\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x9b\x01\n" +
	"\x12UploadMediaRequest\x12(\n" +
	"\x10uploader_user_id\x18\x01 \x01(\rR\x0euploaderUserId\x12\x1b\n" +
	"\tfile_name\x18\x02 \x01(\tR\bfileName\x12\x1b\n" +
	"\tmime_type\x18\x03 \x01(\tR\bmimeType\x12!\n" +
	"\ffile_content\x18\x04 \x01(\fR\vfileContent\"9\n" +
	"\x13UploadMediaResponse\x12\"\n" +
	"\x05media\x18\x01 \x01(\v2\f.media.MediaR\x05media\"4\n" +
	"\x17GetMediaMetadataRequest\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\rR\amediaId2\xd4\x01\n" +
	"\fMediaService\x12<\n" +
	"\vHealthCheck\x12\x16.google.protobuf.Empty\x1a\x15.media.HealthResponse\x12D\n" +
	"\vUploadMedia\x12\x19.media.UploadMediaRequest\x1a\x1a.media.UploadMediaResponse\x12@\n" +
	"\x10GetMediaMetadata\x12\x1e.media.GetMediaMetadataRequest\x1a\f.media.MediaBBZ@github.com/Acad600-TPA/WEB-MJ-242/backend/media-service/genprotob\x06proto3"

var (
	file_proto_media_proto_rawDescOnce sync.Once
	file_proto_media_proto_rawDescData []byte
)

func file_proto_media_proto_rawDescGZIP() []byte {
	file_proto_media_proto_rawDescOnce.Do(func() {
		file_proto_media_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_media_proto_rawDesc), len(file_proto_media_proto_rawDesc)))
	})
	return file_proto_media_proto_rawDescData
}

var file_proto_media_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_media_proto_goTypes = []any{
	(*HealthResponse)(nil),          // 0: media.HealthResponse
	(*Media)(nil),                   // 1: media.Media
	(*UploadMediaRequest)(nil),      // 2: media.UploadMediaRequest
	(*UploadMediaResponse)(nil),     // 3: media.UploadMediaResponse
	(*GetMediaMetadataRequest)(nil), // 4: media.GetMediaMetadataRequest
	(*timestamppb.Timestamp)(nil),   // 5: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),           // 6: google.protobuf.Empty
}
var file_proto_media_proto_depIdxs = []int32{
	5, // 0: media.Media.created_at:type_name -> google.protobuf.Timestamp
	1, // 1: media.UploadMediaResponse.media:type_name -> media.Media
	6, // 2: media.MediaService.HealthCheck:input_type -> google.protobuf.Empty
	2, // 3: media.MediaService.UploadMedia:input_type -> media.UploadMediaRequest
	4, // 4: media.MediaService.GetMediaMetadata:input_type -> media.GetMediaMetadataRequest
	0, // 5: media.MediaService.HealthCheck:output_type -> media.HealthResponse
	3, // 6: media.MediaService.UploadMedia:output_type -> media.UploadMediaResponse
	1, // 7: media.MediaService.GetMediaMetadata:output_type -> media.Media
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_media_proto_init() }
func file_proto_media_proto_init() {
	if File_proto_media_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_media_proto_rawDesc), len(file_proto_media_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_media_proto_goTypes,
		DependencyIndexes: file_proto_media_proto_depIdxs,
		MessageInfos:      file_proto_media_proto_msgTypes,
	}.Build()
	File_proto_media_proto = out.File
	file_proto_media_proto_goTypes = nil
	file_proto_media_proto_depIdxs = nil
}
